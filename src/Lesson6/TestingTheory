Testing Theory
======================

Goals of Testing:
1) Complete Code Coverage: Its impossible for every line in your code to be executed in 1 run (ex- if statements). The goal is to ensure that every line gets run at least once. Requires several trials.
2) Efficiency: Testers want to avoid using test data that belongs to the same "Equivalence Class". This data that will send you down the same path of execution each time you run the program

Strategies:
1) Test around "boundary conditions". This is data that falls right on or near boundaries. Ex- number must be 10 to 20, so test 9,10,11,19,20,21.
2) Test with "extreme conditions". This is data that is far away from acceptable limits. Ex - test 1 million or - 1 million.

Testing Payroll interface
Boundaries: 
Type - try 0,1,2,3
Rate - try 6.74, 6.75, 30.50, 30.51
Hours - try -1,0,1,59,60,61

Extreme
Type- try -1000,+1000
Rate- try -100 and +100
Hours- try -100 and +100

Testing of Payroll InterFace

Complete Code Coverage: Ensuring that every line of your code gets run at least once
Equivalence Class: Data that will send you down the same path of execution each time you run the program
Boundary Conditions: Data that falls right on or near boundaries
Extreme Conditions: Data that is far away from boundaries


Testing Log
Attempt         Data            Expected        Actual   
      
1               type =0        type not set    type not set
2               type =1        type set        type set
3               type =2        type set        type set
4               type =3        type not set    type not set
5               type =100      type not set    type not set
6               type =-100     type not set    type not set
7               rate =6.74     rate not set    type not set
8               rate =6.75     rate set        rate set
9               rate =30.50    rate set        rate set
10              rate =30.51    rate not set    rate not set
11              rate =100      rate not set    rate not set
12              rate =-100     rate not set    rate not set
13              hours =-1      hours not set   hours not set
14              hours =0       hours not set   hours not set
15              hours =1       hours set       hours set
16              hours =59      hours set       hours set
17              hours =60      hours set       hours set
18              hours =61      hours not set   hours not set
19              hours =100     hours not set   hours not set
20              hours =-100    hours not set   hours not set


